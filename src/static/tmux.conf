# Mostly copied from https://blog.petrzemek.net/2016/02/11/my-tmux-configuration/

set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

set -g history-limit 10000

setw -g xterm-keys on

set -g visual-activity off

set -g status-keys vi
setw -g mode-keys vi
set -g mouse on
set -g focus-events on

set -sg escape-time 0
set -g repeat-time 300

set-option -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind -r < swap-window -t -1
bind -r > swap-window -t +1

bind 0 select-window -t :10

unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDragEnd1Pane \
  send-keys -X copy-selection

# Triple LMB Select & Copy (Word)
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-selection-no-clear \; \
    display-message -d 300 'yanked' \; \
    send-keys -X clear-selection
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-selection-no-clear \; \
    display-message -d 300 'yanked' \; \
    send-keys -X clear-selection

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    send-keys -X copy-selection-no-clear \; \
    display-message -d 300 'yanked' \; \
    send-keys -X clear-selection
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-selection-no-clear \; \
    display-message -d 300 'yanked' \; \
    send-keys -X clear-selection

bind -r C-h resize-pane -L 10
bind -r C-j resize-pane -D 10
bind -r C-k resize-pane -U 10
bind -r C-l resize-pane -R 10

bind , command-prompt -p "(rename-window '#W')" "rename-window '%%'"
bind '$' command-prompt -p "(rename-session '#S')" "rename-session '%%'"

# Status line.
set -g status-fg white
set -g status-bg black
set -g status-left ""
set -g status-right "#{?pane_synchronized, #[bg=blue]SYNCHRONIZED#[default],} #S "
 
# Window list.
setw -g window-status-format "#[fg=colour172]#I#[fg=white] #W "
 
# Active window.
setw -g window-status-current-format "#[fg=colour172]#I#[fg=white] #W#F"
 
# Make the window list appear at the left-hand side instead of at the center.
set -g status-justify left

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour green #green

# message text
set-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange

set -g status-interval 1
set -g status-right-length 100
set -g status-right '#[fg=white,dim,bg=default]#(monitor)'

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n C-h  if-shell  "$is_vim"  "send-keys C-h"   "select-pane -L"
bind -n C-j  if-shell  "$is_vim"  "send-keys C-j"   "select-pane -D"
bind -n C-k  if-shell  "$is_vim"  "send-keys C-k"   "select-pane -U"
bind -n C-l  if-shell  "$is_vim"  "send-keys C-l"   "select-pane -R"
bind -n C-\\ if-shell  "$is_vim"  "send-keys C-\\\\"  "select-pane -l"
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind \\ select-pane -l
